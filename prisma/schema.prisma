// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String    @id @default(cuid())
  name                  String?
  email                 String?   @unique
  emailVerified         DateTime?
  image                 String?
  password              String?
  passwordResetToken    String?   @unique
  passwordResetTokenExp DateTime?
  accounts              Account[]
  sessions              Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Categoria {
  idCategoria    Int      @id @map("idCategoria")
  nomeCategoria  String?  @map("nomeCategoria")
  descricao      String?  @map("descricao")
  videos         Video[]
  
  @@map("Categoria")
}

model Video {
  idVideo        Int      @id @default(autoincrement()) @map("idVideo")
  nomeVideo      String   @map("nomeVideo")
  urlArquivo     String?  @map("urlArquivo")
  urlExterno     String?  @map("urlExterno")
  urlCapa        String?  @map("urlCapa")
  descricao      String   @map("descricao")
  idUsuario      Int      @map("idUsuario")
  dataUpload     DateTime @map("dataUpload")
  idCategoria    Int      @map("idCategoria")
  nomeAutor      String?  @map("nomeAutor")
  cargoAutor     String?  @map("cargoAutor")
  categoria      Categoria @relation(fields: [idCategoria], references: [idCategoria])
  
  @@map("Video")
}
